shiny::runApp()
runApp()
runApp()
taxes <- read.csv(file.path("Taxes CH_hor.csv"), stringsAsFactors=FALSE)
head(taxes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(taxes)
taxes[,1]
names(taxes[1])
taxes <- read.csv(file.path("Taxes CH_hor.csv"), stringsAsFactors=FALSE)
head(taxes)
plot(taxes$Year, taxes$Tax.perc)
plot(taxes$Year, taxes$Tax.perc)
plot(x=taxes$Year, y=taxes$Canton)
taxes <- read.csv(file.path("Taxes CH_01.csv"), stringsAsFactors=FALSE)
head(taxes)
plot(x=taxes$Taxable.Income, y=taxes$Tax.perc.)
runApp()
taxes <- read.csv(file.path("Taxes CH_01.csv"), stringsAsFactors=FALSE)
head(taxes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot(x=taxes$Ã¯..Year, y=taxes$Total.Tax)
runApp()
taxes <- read.csv(file.path("Taxes CH_01.csv"), stringsAsFactors=FALSE)
head(taxes)
runApp()
runApp()
runApp()
runApp()
ggplot(x=taxes$Taxable.Income, y=taxes$Tax.perc.)
library("ggplot2", lib.loc="~/R/win-library/3.5")
require(ggplot2)    # ensure package is loaded
ggplot(x=taxes$Taxable.Income, y=taxes$Tax.perc.)
ggplot(x=taxes$Taxable.Income, y=taxes$Tax.perc., xlab=names(taxes$Taxable.Income))
plot(x=taxes$Taxable.Income, y=taxes$Tax.perc., xlab=names(taxes$Taxable.Income))
plot(x=taxes$Taxable.Income, y=taxes$Tax.perc., xlab="Taxable Income", ylab="Tax (%)")
ggplot
ggplot()
?ggplot
?plot
plot(x=taxes$Taxable.Income, y=taxes$Tax.perc., xlab="Taxable Income", ylab="Tax (%)", col = ifelse(taxes$Canton = "SO",'red','black'))
qplot(Taxable.Income, Tax.perc., colour = Canton, data = taxes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x <- taxes[taxes$Canton == input$canton, as.numeric(input$xvar)] })
x <- taxes[taxes$Canton == input$canton, as.numeric(input$xvar)]
x <- taxes[taxes$Canton == input$canton, 6]
x <- taxes[taxes$Canton == "BE", 6]
x
head(X)
x = taxes[taxes$Canton == "BE", 6]
x
x = taxes[taxes$Canton == "BE", ]
x
x = taxes[taxes$Canton == "BE", 7]
x
runApp()
runApp()
x = taxes[taxes$Canton == "BE", 8]
x
